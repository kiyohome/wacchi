openapi: 3.0.3
info:
  title: PUT REST API
  version: '1.0.0'
  description: モバイルアプリハンズオンで作成するPUTアプリのREST API。
tags:
  - name: users
    description: ユーザ管理
  - name: trash
    description: ゴミ拾い管理
servers:
  - url: 'http://localhost:9080'
paths:
  /api/trash:
    get:
      summary: ゴミ拾い一覧の取得
      description: >
        登録しているゴミ拾いを全て取得する。
      tags:
        - trash
      operationId: getTrashList
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trash'
              examples:
                example:
                  value:
                    - id: 1001
                      imageUrl: https://images.unsplash.com/photo-1534962303837-2edd16492781
                      date: 2020/11/12
                      point: 34
                    - id: 1002
                      imageUrl: https://images.unsplash.com/photo-1597348989645-46b190ce4918
                      date: 2020/11/10
                      point: 17
                    - id: 1003
                      imageUrl: https://images.unsplash.com/photo-1568735031465-2310886272dd
                      date: 2020/11/1
                      point: 8
                    - id: 1004
                      imageUrl: https://images.unsplash.com/photo-1603730347631-6aacbfef195a
                      date: 2020/10/29
                      point: 17
                    - id: 1005
                      imageUrl: https://images.unsplash.com/photo-1518699376815-e6cae5137429
                      date: 2020/10/20
                      point: 11
        '403':
          description: Forbidden
    post:
      summary: ゴミ拾いの登録
      tags:
        - trash
      description: >
        ゴミ拾いを登録する。
      operationId: postTrash
      requestBody:
        content:
          'image/jpg':
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Trash'
              examples:
                example:
                  value:
                    id: 1006
                    imageUrl: https://images.unsplash.com/photo-1602084551218-a28205125639
                    date: 2020/11/17
                    point: 25
        '400':
          description: Bad Request
        '403':
          description: Forbidden
  /api/login:
    post:
      summary: ログイン
      description: >
        ユーザー情報で認証を行い、認証に成功した場合はログインする。
        一部のREST APIを利用するためには、このREST APIを利用して事前にログインしておく必要がある。
        ログイン状態は、ログアウトするREST APIを呼び出すか、一定時間が経過するまで継続する。
      tags:
        - users
      operationId: login
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                userName:
                  type: string
                  description: ユーザー名
                password:
                  type: string
                  description: パスワード
              required:
                - userName
                - password
              additionalProperties: false
            examples:
              example:
                value:
                  userName: test1
                  password: password
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /api/logout:
    post:
      summary: ログアウト
      description: >
        ログイン中である場合、ログアウトする。
      tags:
        - users
      operationId: logout
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
components:
  schemas:
    Trash:
      title: Trash
      type: object
      description: ゴミ拾い
      properties:
        id:
          type: integer
          description: ゴミ拾いのID
        imageUrl:
          type: string
          description: ゴミ拾いイメージのURL
        date:
          type: string
          description: ゴミ拾いの登録日
        point:
          type: integer
          description: ゴミ拾いのポイント
      required:
        - id
        - imageUrl
        - date
        - point
      additionalProperties: false
  securitySchemes: {}
